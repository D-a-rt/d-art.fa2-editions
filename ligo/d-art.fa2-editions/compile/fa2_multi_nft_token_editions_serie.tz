{ parameter
    (or (or (nat %burn_token)
            (list %distribute_editions (pair (nat %edition_id) (list %receivers address))))
        (or (or %fA2
               (or (pair %balance_of
                      (list %requests (pair (address %owner) (nat %token_id)))
                      (contract %callback
                         (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance)))))
                   (list %transfer
                      (pair (address %from_)
                            (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))))
               (list %update_operators
                  (or (pair %add_operator (address %owner) (pair (address %operator) (nat %token_id)))
                      (pair %remove_operator (address %owner) (pair (address %operator) (nat %token_id))))))
            (list %mint_editions
               (pair (bytes %ipfs_hash)
                     (pair (nat %royalties_percentage)
                           (pair (address %royalties_address) (nat %total_edition_number))))))) ;
  storage
    (pair (pair (pair (address %admin)
                      (pair %assets
                         (pair (big_map %ledger nat address)
                               (big_map %operators (pair address (pair address nat)) unit))
                         (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))))
                (pair (big_map %editions_metadata
                         nat
                         (pair (address %creator)
                               (pair (bytes %ipfs_hash)
                                     (pair (nat %total_edition_number)
                                           (pair (nat %remaining_edition_number)
                                                 (pair (address %royalties_address) (nat %royalties_percentage)))))))
                      (nat %max_editions_per_run)))
          (pair (big_map %metadata string bytes) (nat %next_edition_id))) ;
  code { PUSH string "FA2_TOKEN_UNDEFINED" ;
         PUSH string "FA2_INSUFFICIENT_BALANCE" ;
         SWAP ;
         DUP ;
         DUG 2 ;
         SWAP ;
         DUP ;
         DUG 2 ;
         PAIR ;
         LAMBDA
           (pair (pair string string)
                 (pair (pair (list (pair (option address) (list (pair (option address) (pair nat nat)))))
                             (lambda
                                (pair (pair address address) (pair nat (big_map (pair address (pair address nat)) unit)))
                                unit))
                       (pair (pair (big_map nat address) (big_map (pair address (pair address nat)) unit))
                             (big_map nat (pair nat (map string bytes))))))
           (pair (list operation)
                 (pair (pair (big_map nat address) (big_map (pair address (pair address nat)) unit))
                       (big_map nat (pair nat (map string bytes)))))
           { UNPAIR ;
             UNPAIR ;
             DIG 2 ;
             UNPAIR ;
             UNPAIR ;
             DUP 3 ;
             CAR ;
             CAR ;
             DUP 4 ;
             CAR ;
             CDR ;
             SWAP ;
             DIG 2 ;
             ITER { DUP ;
                    DUG 2 ;
                    CDR ;
                    ITER { SWAP ;
                           DUP 3 ;
                           CAR ;
                           IF_NONE
                             { UNIT }
                             { DUP 5 ;
                               DUP 4 ;
                               GET 3 ;
                               PAIR ;
                               SENDER ;
                               DIG 2 ;
                               PAIR ;
                               PAIR ;
                               DUP 6 ;
                               SWAP ;
                               EXEC } ;
                           DROP ;
                           PUSH nat 1 ;
                           DUP 3 ;
                           GET 4 ;
                           COMPARE ;
                           GT ;
                           IF { DROP 2 ; DUP 5 ; FAILWITH }
                              { PUSH nat 0 ;
                                DUP 3 ;
                                GET 4 ;
                                COMPARE ;
                                EQ ;
                                IF { DUP ;
                                     DIG 2 ;
                                     GET 3 ;
                                     GET ;
                                     IF_NONE { DROP ; DUP 6 ; FAILWITH } { DROP } }
                                   { SWAP ;
                                     DUP ;
                                     DUG 2 ;
                                     GET 3 ;
                                     DUP 4 ;
                                     CAR ;
                                     IF_NONE
                                       { DROP }
                                       { DUP 3 ;
                                         DUP 3 ;
                                         GET ;
                                         IF_NONE
                                           { DROP 3 ; DUP 7 ; FAILWITH }
                                           { COMPARE ;
                                             EQ ;
                                             IF { NONE address ; SWAP ; UPDATE } { DROP 2 ; DUP 6 ; FAILWITH } } } ;
                                     SWAP ;
                                     DUP ;
                                     DUG 2 ;
                                     GET 3 ;
                                     DIG 2 ;
                                     CAR ;
                                     IF_NONE { DROP } { DIG 2 ; SWAP ; DIG 2 ; SWAP ; SOME ; SWAP ; UPDATE } } } } ;
                    SWAP ;
                    DROP } ;
             SWAP ;
             DIG 2 ;
             DIG 4 ;
             DIG 5 ;
             DROP 4 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             DIG 2 ;
             CAR ;
             CDR ;
             DIG 2 ;
             PAIR ;
             PAIR ;
             NIL operation ;
             PAIR } ;
         SWAP ;
         APPLY ;
         LAMBDA
           (pair bool string)
           unit
           { UNPAIR ; NOT ; IF { FAILWITH } { DROP ; UNIT } } ;
         DIG 4 ;
         UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { DIG 2 ;
                 DIG 3 ;
                 DROP 2 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 SWAP ;
                 CAR ;
                 CAR ;
                 CDR ;
                 CAR ;
                 CAR ;
                 SWAP ;
                 GET ;
                 IF_NONE
                   { DIG 2 ; DROP ; DIG 2 ; FAILWITH }
                   { DIG 4 ;
                     DROP ;
                     SENDER ;
                     SWAP ;
                     COMPARE ;
                     EQ ;
                     IF { DIG 2 ; DROP } { DIG 2 ; FAILWITH } } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 DUP 3 ;
                 CAR ;
                 CDR ;
                 DUP 4 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 UNPAIR ;
                 CDR ;
                 DUP 6 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 CAR ;
                 CAR ;
                 DIG 5 ;
                 NONE address ;
                 SWAP ;
                 UPDATE ;
                 PAIR ;
                 PAIR ;
                 DIG 3 ;
                 CAR ;
                 CAR ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 NIL operation ;
                 PAIR }
               { DIG 4 ;
                 DIG 5 ;
                 DROP 2 ;
                 ITER { SWAP ;
                        DUP ;
                        CAR ;
                        CDR ;
                        CAR ;
                        DUP 3 ;
                        CAR ;
                        GET ;
                        IF_NONE { PUSH string "INVALID_EDITION_ID" ; FAILWITH } {} ;
                        DUP ;
                        CAR ;
                        SENDER ;
                        COMPARE ;
                        NEQ ;
                        IF { PUSH string "INVALID_DISTRIBUTOR" ; FAILWITH } {} ;
                        PAIR ;
                        SWAP ;
                        DUP ;
                        DUG 2 ;
                        CDR ;
                        DIG 2 ;
                        CAR ;
                        DIG 2 ;
                        UNPAIR ;
                        DUP 4 ;
                        SIZE ;
                        SWAP ;
                        DUP ;
                        DUG 2 ;
                        GET 7 ;
                        SUB ;
                        PUSH string "NO_EDITIONS_TO_DISTRIBUTE" ;
                        PUSH int 0 ;
                        DUP 3 ;
                        COMPARE ;
                        GE ;
                        PAIR ;
                        DUP 7 ;
                        SWAP ;
                        EXEC ;
                        DROP ;
                        SWAP ;
                        DUP ;
                        DUG 2 ;
                        GET 7 ;
                        DUP 3 ;
                        GET 5 ;
                        SUB ;
                        ABS ;
                        DUP 4 ;
                        CAR ;
                        CDR ;
                        CDR ;
                        DUP 6 ;
                        MUL ;
                        ADD ;
                        NIL (pair address nat) ;
                        PAIR ;
                        DIG 5 ;
                        ITER { SWAP ;
                               UNPAIR ;
                               PUSH nat 1 ;
                               DUP 3 ;
                               ADD ;
                               SWAP ;
                               DIG 2 ;
                               DIG 3 ;
                               PAIR ;
                               CONS ;
                               PAIR } ;
                        CAR ;
                        DUP 4 ;
                        CAR ;
                        CAR ;
                        CDR ;
                        DUP 4 ;
                        GET 3 ;
                        PAIR ;
                        DUP 5 ;
                        CAR ;
                        CDR ;
                        CDR ;
                        DUP 7 ;
                        MUL ;
                        DUG 2 ;
                        UNPAIR ;
                        SWAP ;
                        NIL (pair (option address) (pair nat nat)) ;
                        PAIR ;
                        DIG 2 ;
                        ITER { DUP ;
                               DUG 2 ;
                               CDR ;
                               SWAP ;
                               DUP ;
                               DUG 2 ;
                               CDR ;
                               CAR ;
                               CAR ;
                               SWAP ;
                               DUP ;
                               DUG 2 ;
                               MEM ;
                               IF { DROP 3 ; PUSH string "FA2_INVALID_TOKEN_ID" ; FAILWITH }
                                  { PUSH nat 1 ;
                                    DUP 6 ;
                                    DUP 3 ;
                                    SUB ;
                                    ADD ;
                                    DUP 3 ;
                                    CDR ;
                                    CDR ;
                                    EMPTY_MAP string bytes ;
                                    DIG 2 ;
                                    PACK ;
                                    SOME ;
                                    PUSH string "edition_number" ;
                                    UPDATE ;
                                    DUP 6 ;
                                    SOME ;
                                    PUSH string "" ;
                                    UPDATE ;
                                    DUP 3 ;
                                    PAIR ;
                                    DUP 3 ;
                                    SWAP ;
                                    SOME ;
                                    SWAP ;
                                    UPDATE ;
                                    DUP 3 ;
                                    CDR ;
                                    CAR ;
                                    PAIR ;
                                    DIG 2 ;
                                    CAR ;
                                    PUSH nat 1 ;
                                    DIG 3 ;
                                    DIG 4 ;
                                    CAR ;
                                    SOME ;
                                    PAIR 3 ;
                                    CONS ;
                                    PAIR } } ;
                        SWAP ;
                        DIG 2 ;
                        DROP 2 ;
                        DUP ;
                        CDR ;
                        LAMBDA
                          (pair (pair address address) (pair nat (big_map (pair address (pair address nat)) unit)))
                          unit
                          { DROP ; UNIT } ;
                        NIL (pair (option address) (list (pair (option address) (pair nat nat)))) ;
                        DIG 3 ;
                        CAR ;
                        NONE address ;
                        PAIR ;
                        CONS ;
                        PAIR ;
                        PAIR ;
                        DUP 7 ;
                        SWAP ;
                        EXEC ;
                        CDR ;
                        DUP 4 ;
                        CDR ;
                        DUP 5 ;
                        CAR ;
                        CDR ;
                        DIG 2 ;
                        DUP 6 ;
                        CAR ;
                        CAR ;
                        CAR ;
                        PAIR ;
                        PAIR ;
                        PAIR ;
                        DUP ;
                        CDR ;
                        SWAP ;
                        DUP ;
                        DUG 2 ;
                        CAR ;
                        CDR ;
                        CDR ;
                        DIG 5 ;
                        CAR ;
                        CDR ;
                        CAR ;
                        DIG 5 ;
                        DIG 5 ;
                        ABS ;
                        UPDATE 7 ;
                        SOME ;
                        DIG 5 ;
                        UPDATE ;
                        PAIR ;
                        DIG 2 ;
                        CAR ;
                        CAR ;
                        PAIR ;
                        PAIR } ;
                 SWAP ;
                 DIG 2 ;
                 DROP 2 ;
                 NIL operation ;
                 PAIR } }
           { DIG 4 ;
             DROP ;
             IF_LEFT
               { DIG 2 ;
                 DROP ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 SWAP ;
                 IF_LEFT
                   { IF_LEFT
                       { DIG 3 ;
                         DROP ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         SWAP ;
                         DUP ;
                         CAR ;
                         MAP { DUP 3 ;
                               SWAP ;
                               DUP ;
                               DUG 2 ;
                               CDR ;
                               GET ;
                               IF_NONE
                                 { DROP ; DUP 5 ; FAILWITH }
                                 { SWAP ;
                                   DUP ;
                                   DUG 2 ;
                                   CAR ;
                                   SWAP ;
                                   COMPARE ;
                                   EQ ;
                                   IF { PUSH nat 1 } { PUSH nat 0 } ;
                                   SWAP ;
                                   PAIR } } ;
                         DIG 2 ;
                         DIG 5 ;
                         DROP 2 ;
                         SWAP ;
                         CDR ;
                         PUSH mutez 0 ;
                         DIG 2 ;
                         TRANSFER_TOKENS ;
                         SWAP ;
                         NIL operation ;
                         DIG 2 ;
                         CONS ;
                         PAIR }
                       { DIG 4 ;
                         DROP ;
                         MAP { DUP ;
                               CDR ;
                               MAP { DUP ; GET 4 ; SWAP ; DUP ; DUG 2 ; GET 3 ; DIG 2 ; CAR ; SOME ; PAIR 3 } ;
                               SWAP ;
                               CAR ;
                               SOME ;
                               PAIR } ;
                         SWAP ;
                         LAMBDA
                           (pair (pair address address) (pair nat (big_map (pair address (pair address nat)) unit)))
                           unit
                           { UNPAIR ;
                             UNPAIR ;
                             DIG 2 ;
                             UNPAIR ;
                             DUP 4 ;
                             DUP 4 ;
                             COMPARE ;
                             EQ ;
                             IF { DROP 4 ; UNIT }
                                { DIG 3 ;
                                  PAIR ;
                                  DIG 2 ;
                                  PAIR ;
                                  MEM ;
                                  IF { UNIT } { PUSH string "FA2_NOT_OPERATOR" ; FAILWITH } } } ;
                         DIG 2 ;
                         PAIR ;
                         PAIR ;
                         DIG 2 ;
                         SWAP ;
                         EXEC } }
                   { DIG 3 ;
                     DIG 4 ;
                     DROP 2 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     SWAP ;
                     SENDER ;
                     DUG 2 ;
                     ITER { SWAP ;
                            DUP 3 ;
                            DUP 3 ;
                            IF_LEFT {} {} ;
                            CAR ;
                            COMPARE ;
                            EQ ;
                            IF {} { PUSH string "FA2_NOT_OWNER" ; FAILWITH } ;
                            SWAP ;
                            IF_LEFT
                              { SWAP ;
                                UNIT ;
                                SOME ;
                                DUP 3 ;
                                GET 4 ;
                                DUP 4 ;
                                GET 3 ;
                                PAIR ;
                                DIG 3 ;
                                CAR ;
                                PAIR ;
                                UPDATE }
                              { DUP ;
                                DUG 2 ;
                                GET 4 ;
                                DUP 3 ;
                                GET 3 ;
                                PAIR ;
                                DIG 2 ;
                                CAR ;
                                PAIR ;
                                NONE unit ;
                                SWAP ;
                                UPDATE } } ;
                     SWAP ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     SWAP ;
                     DIG 2 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     NIL operation ;
                     PAIR } ;
                 UNPAIR ;
                 DUP 3 ;
                 CDR ;
                 DUP 4 ;
                 CAR ;
                 CDR ;
                 DIG 3 ;
                 DIG 4 ;
                 CAR ;
                 CAR ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 SWAP ;
                 PAIR }
               { DIG 3 ;
                 DIG 4 ;
                 DROP 2 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 CAR ;
                 SENDER ;
                 COMPARE ;
                 NEQ ;
                 IF { PUSH string "NOT_AN_ADMIN" ; FAILWITH } {} ;
                 ITER { SWAP ;
                        PUSH string "ROYALTIES_CANT_EXCEED_100_PERCENT" ;
                        PUSH nat 100 ;
                        DUP 4 ;
                        GET 3 ;
                        COMPARE ;
                        LE ;
                        PAIR ;
                        DUP 4 ;
                        SWAP ;
                        EXEC ;
                        DROP ;
                        PUSH string "EDITION_NUMBER_SHOULD_BE_AT_LEAST_ONE" ;
                        PUSH nat 1 ;
                        DUP 4 ;
                        GET 6 ;
                        COMPARE ;
                        GE ;
                        PAIR ;
                        DUP 4 ;
                        SWAP ;
                        EXEC ;
                        DROP ;
                        PUSH string "EDITION_RUN_TOO_LARGE" ;
                        SWAP ;
                        DUP ;
                        DUG 2 ;
                        CAR ;
                        CDR ;
                        CDR ;
                        DUP 4 ;
                        GET 6 ;
                        COMPARE ;
                        LE ;
                        PAIR ;
                        DUP 4 ;
                        SWAP ;
                        EXEC ;
                        DROP ;
                        SWAP ;
                        DUP ;
                        DUG 2 ;
                        GET 3 ;
                        DUP 3 ;
                        GET 5 ;
                        DUP 4 ;
                        GET 6 ;
                        DUP 5 ;
                        GET 6 ;
                        DIG 5 ;
                        CAR ;
                        SENDER ;
                        PAIR 6 ;
                        PUSH nat 1 ;
                        DUP 3 ;
                        CDR ;
                        CDR ;
                        ADD ;
                        DUP 3 ;
                        CDR ;
                        CAR ;
                        PAIR ;
                        DUP 3 ;
                        CAR ;
                        PAIR ;
                        DUP ;
                        CDR ;
                        SWAP ;
                        DUP ;
                        DUG 2 ;
                        CAR ;
                        CDR ;
                        CDR ;
                        DUP 5 ;
                        CAR ;
                        CDR ;
                        CAR ;
                        DIG 4 ;
                        DIG 5 ;
                        CDR ;
                        CDR ;
                        SWAP ;
                        SOME ;
                        SWAP ;
                        UPDATE ;
                        PAIR ;
                        DIG 2 ;
                        CAR ;
                        CAR ;
                        PAIR ;
                        PAIR } ;
                 SWAP ;
                 DROP ;
                 NIL operation ;
                 PAIR } } } ;
  view "minter_royalties"
       nat
       (pair (address %address) (nat %percentage))
       { UNPAIR ;
         SWAP ;
         DUP ;
         DUG 2 ;
         CAR ;
         CAR ;
         CDR ;
         CAR ;
         CAR ;
         SWAP ;
         DUP ;
         DUG 2 ;
         GET ;
         IF_NONE
           { DROP 2 ; PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH }
           { DROP ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             CDR ;
             SWAP ;
             EDIV ;
             IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
             CAR ;
             SWAP ;
             CAR ;
             CDR ;
             CAR ;
             SWAP ;
             GET ;
             IF_NONE
               { PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH }
               { DUP ; GET 10 ; SWAP ; CAR ; PAIR } } } }

